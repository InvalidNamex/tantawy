# Generated by Django 5.2.6 on 2025-09-20 18:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_add_customervendor_pricelist'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, help_text='Timestamp when record was created')),
                ('updatedAt', models.DateTimeField(auto_now=True, blank=True, help_text='Timestamp when record was last updated', null=True)),
                ('deletedAt', models.DateTimeField(blank=True, help_text='Timestamp when record was soft deleted', null=True)),
                ('isDeleted', models.BooleanField(default=False, help_text='Indicates if record is soft deleted')),
                ('agentName', models.CharField(help_text='Display name for the agent', max_length=255)),
                ('agentUserID', models.ForeignKey(help_text='Reference to the Django auth user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('createdBy', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='agent_created', to=settings.AUTH_USER_MODEL)),
                ('deletedBy', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='agent_deleted', to=settings.AUTH_USER_MODEL)),
                ('updatedBy', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='agent_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
                'db_table': 'agents',
                'ordering': ['agentName'],
            },
            bases=(models.Model,),
        ),
    ]
